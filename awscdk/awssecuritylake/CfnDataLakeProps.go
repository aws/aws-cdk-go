package awssecuritylake

import (
	"github.com/aws/aws-cdk-go/awscdk/v2"
)

// Properties for defining a `CfnDataLake`.
//
// Example:
//   // The code below shows an example of how to instantiate this type.
//   // The values are placeholders you should change.
//   import "github.com/aws/aws-cdk-go/awscdk"
//
//   cfnDataLakeProps := &CfnDataLakeProps{
//   	EncryptionConfiguration: &EncryptionConfigurationProperty{
//   		KmsKeyId: jsii.String("kmsKeyId"),
//   	},
//   	LifecycleConfiguration: &LifecycleConfigurationProperty{
//   		Expiration: &ExpirationProperty{
//   			Days: jsii.Number(123),
//   		},
//   		Transitions: []interface{}{
//   			&TransitionsProperty{
//   				Days: jsii.Number(123),
//   				StorageClass: jsii.String("storageClass"),
//   			},
//   		},
//   	},
//   	MetaStoreManagerRoleArn: jsii.String("metaStoreManagerRoleArn"),
//   	ReplicationConfiguration: &ReplicationConfigurationProperty{
//   		Regions: []*string{
//   			jsii.String("regions"),
//   		},
//   		RoleArn: jsii.String("roleArn"),
//   	},
//   	Tags: []cfnTag{
//   		&cfnTag{
//   			Key: jsii.String("key"),
//   			Value: jsii.String("value"),
//   		},
//   	},
//   }
//
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html
//
type CfnDataLakeProps struct {
	// Provides encryption details of the Amazon Security Lake object.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-encryptionconfiguration
	//
	EncryptionConfiguration interface{} `field:"optional" json:"encryptionConfiguration" yaml:"encryptionConfiguration"`
	// You can customize Security Lake to store data in your preferred AWS Regions for your preferred amount of time.
	//
	// Lifecycle management can help you comply with different compliance requirements. For more details, see [Lifecycle management](https://docs.aws.amazon.com//security-lake/latest/userguide/lifecycle-management.html) in the Amazon Security Lake User Guide.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-lifecycleconfiguration
	//
	LifecycleConfiguration interface{} `field:"optional" json:"lifecycleConfiguration" yaml:"lifecycleConfiguration"`
	// The Amazon Resource Name (ARN) used to create and update the AWS Glue table.
	//
	// This table contains partitions generated by the ingestion and normalization of AWS log sources and custom sources.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-metastoremanagerrolearn
	//
	MetaStoreManagerRoleArn *string `field:"optional" json:"metaStoreManagerRoleArn" yaml:"metaStoreManagerRoleArn"`
	// Provides replication details of Amazon Security Lake object.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-replicationconfiguration
	//
	ReplicationConfiguration interface{} `field:"optional" json:"replicationConfiguration" yaml:"replicationConfiguration"`
	// An array of objects, one for each tag to associate with the data lake configuration.
	//
	// For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-tags
	//
	Tags *[]*awscdk.CfnTag `field:"optional" json:"tags" yaml:"tags"`
}

